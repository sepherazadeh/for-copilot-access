name: Enforce Model Policy

on:
  push:
    branches:
      - main
      - develop
      - 'cost-gate/**'
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  override-models:
    name: Override Blocked Models
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Run model override script
        run: |
          echo "🔄 Running model override script..."
          node override-models-until.js ./agents-config-safety.json
      
      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet agents-config-safety.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "✅ No model replacements needed"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "📝 Model replacements were made"
          fi
      
      - name: Commit and push changes
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add agents-config-safety.json
          git commit -m "chore: Auto-override blocked models [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  scan-premium-models:
    name: Scan for Premium Model References
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Scan for direct premium model mentions
        run: |
          echo "🔍 Scanning for direct mentions of premium models..."
          
          PREMIUM_MODELS=("gpt-5" "gpt-4.1" "claude-opus" "claude-3-opus")
          FOUND_ISSUES=0
          
          # Exclude certain directories and files
          EXCLUDE_PATTERN="node_modules|\.git|agents-config-safety\.json|override-models-until\.js|orchestrator-cost-gate\.js|\.github/workflows"
          
          for model in "${PREMIUM_MODELS[@]}"; do
            echo ""
            echo "Searching for: $model"
            
            # Search in all files, excluding specified patterns
            MATCHES=$(grep -r "$model" . \
              --exclude-dir=node_modules \
              --exclude-dir=.git \
              --exclude="agents-config-safety.json" \
              --exclude="override-models-until.js" \
              --exclude="orchestrator-cost-gate.js" \
              --exclude-dir=".github" \
              2>/dev/null || true)
            
            if [ -n "$MATCHES" ]; then
              echo "⚠️  Found direct reference to $model:"
              echo "$MATCHES"
              FOUND_ISSUES=$((FOUND_ISSUES + 1))
            else
              echo "✅ No direct references found for $model"
            fi
          done
          
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          if [ $FOUND_ISSUES -gt 0 ]; then
            echo "⚠️  WARNING: Found $FOUND_ISSUES direct reference(s) to premium models"
            echo "Please use the orchestrator-cost-gate service instead of direct API calls"
            exit 0  # Warning only, don't fail the build
          else
            echo "✅ No direct premium model references found"
          fi
      
      - name: Check config file validity
        run: |
          echo "🔍 Validating agents-config-safety.json..."
          
          if [ -f "agents-config-safety.json" ]; then
            # Check if it's valid JSON
            if node -e "JSON.parse(require('fs').readFileSync('agents-config-safety.json', 'utf8'))"; then
              echo "✅ Configuration file is valid JSON"
            else
              echo "❌ Configuration file is invalid JSON"
              exit 1
            fi
            
            # Check for required fields
            if node -e "const c = JSON.parse(require('fs').readFileSync('agents-config-safety.json', 'utf8')); if (!c.blocked_models_until || !c.fallback_order || !c.agents) process.exit(1)"; then
              echo "✅ Required fields present"
            else
              echo "❌ Missing required fields in configuration"
              exit 1
            fi
          else
            echo "❌ agents-config-safety.json not found"
            exit 1
          fi
